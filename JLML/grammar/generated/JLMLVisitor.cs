//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JLML.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JLML.Generated {
 #pragma warning disable 3021 
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="JLMLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.CLSCompliant(false)]
public interface IJLMLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.jlml"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJlml([NotNull] JLMLParser.JlmlContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.headers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeaders([NotNull] JLMLParser.HeadersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement([NotNull] JLMLParser.ElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.elementkey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementkey([NotNull] JLMLParser.ElementkeyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPair([NotNull] JLMLParser.PairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKey([NotNull] JLMLParser.KeyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] JLMLParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.math"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMath([NotNull] JLMLParser.MathContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.with"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWith([NotNull] JLMLParser.WithContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.when"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhen([NotNull] JLMLParser.WhenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.whenthen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhenthen([NotNull] JLMLParser.WhenthenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="JLMLParser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitList([NotNull] JLMLParser.ListContext context);
}
} // namespace JLML.Generated
